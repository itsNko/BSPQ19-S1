<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>es.deusto.app</groupId>
	<artifactId>Videoclub</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Videoclub</name>
	<!-- FIXME change it to the project's website -->
	<url>https://github.com/BSPQ18-19/BSPQ19-S1</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<server.IP>127.0.0.1</server.IP>
		<server.port>1099</server.port>
		<server.Name>Server</server.Name>
		<server.paypal>PaypalServer</server.paypal>
		<policy.file>${basedir}/src/main/resources/security/java.policy</policy.file>
		<config.files.dir>${basedir}/src/main/resources</config.files.dir>
		<doxygen.config.file>${basedir}/src/main/resources/Doxyfile</doxygen.config.file>
		<sonar.organization>itsnko</sonar.organization>
  		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.18.0</version>
			<scope>test</scope> <!-- Utilizar solo la librerÃ­a al hacer los tests -->
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-core</artifactId>
			<version>[5.1.6, 5.9)</version>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-api-jdo</artifactId>
			<version>[5.1.4, 5.9)</version>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-rdbms</artifactId>
			<version>[5.1.6, 5.9)</version>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>javax.jdo</artifactId>
			<version>[3.2.0-m8, )</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.15</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency> 
            <groupId>org.databene</groupId>
            <artifactId>contiperf</artifactId>
            <version>2.3.4</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>[1.2.17, )</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.25</version>
			<scope>compile</scope>
		</dependency> 
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>com.soebes.maven.plugins</groupId>
				<artifactId>doxygen-maven-plugin</artifactId>
				<version>1.1.0</version>
				<configuration>
					<configurationFile>${doxygen.config.file}</configurationFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/docs</outputDirectory>
								<resources>
									<resource>
									<directory>${basedir}/target/doxygen/html</directory>
									<filtering>true</filtering>
									</resource>
								</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
					<includes>
						<include>src/test/java/es/deusto/**/*.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.3</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<excludes>
						<exclude>**/es/deusto/client/gui/**</exclude>
					</excludes>
					<rules>
						<rule>
							<element>BUNDLE</element>
							<limits>
								<limit>
									<counter>INSTRUCTION</counter>
									<value>COVEREDRATIO</value>
									<minimum>0.00</minimum>
								</limit>
								<limit>
									<counter>BRANCH</counter>
									<value>COVEREDRATIO</value>
									<minimum>0.00</minimum>
								</limit>
							</limits>
						</rule>
					</rules>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.datanucleus</groupId>
				<artifactId>datanucleus-maven-plugin</artifactId>
				<version>5.0.2</version>
				<configuration>
					<log4jConfiguration>${config.files.dir}/log4j.properties</log4jConfiguration>
					<verbose>true</verbose>
					<props>${config.files.dir}/datanucleus.properties</props>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>enhance</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
	
	
	<profiles>
		<!-- Jacoco Coverage -->
		<profile>
			<id>coverage</id>
			<build>
			<plugins>
				<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.7</version>
				<executions>
					<execution>
					<id>prepare-agent</id>
					<goals>
						<goal>prepare-agent</goal>
					</goals>
					</execution>
					<execution>
					<id>report</id>
					<goals>
						<goal>report</goal>
					</goals>
					<configuration>
						<formats>
						<format>XML</format>
						</formats>
					</configuration>
					</execution>
				</executions>
				</plugin>
			</plugins>
			</build>
		</profile>
		<!-- run as 'mvn exec:java -Pserver' -->
		<profile>
			<id>server</id>
			<build>
				<resources>
					<resource>
						<directory>${config.files.dir}</directory>
						<includes>
							<include>**/*.jdo</include>
							<include>**/*.orm</include>
							<include>**/*.properties</include>
						</includes>
					</resource>
				</resources>

				<plugins>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>3.0.0</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>${basedir}</directory>
									<directory>${basedir}/docs</directory>
									<includes>
										<include>*.log</include>
										<include>*.ods</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<configuration>
							<mainClass>es.deusto.server.server.ProgramaPrincipal</mainClass>
							<systemProperties>
								<systemProperty>
									<key>java.security.manager</key>
									<value>java.rmi.RMISecurityManager</value>
								</systemProperty>
								<systemProperty>
									<key>java.rmi.server.codebase</key>
									<value>file:${basedir}/target/classes/</value>
								</systemProperty>
								<systemProperty>
									<key>java.security.policy</key>
									<value>${policy.file}</value>
								</systemProperty>
							</systemProperties>
							<arguments>
								<argument>${server.IP}</argument>
								<argument>${server.port}</argument>
								<argument>${server.Name}</argument>
								<argument>${server.paypal}</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- run as 'mvn exec:java -Pclient' -->
		<profile>
			<id>client</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<configuration>
							<mainClass>es.deusto.client.controllers.ControllerRegistro</mainClass>
							<systemProperties>
								<systemProperty>
									<key>java.security.manager</key>
									<value>java.rmi.RMISecurityManager</value>
								</systemProperty>
								<systemProperty>
									<key>java.security.policy</key>
									<value>${policy.file}</value>
								</systemProperty>
							</systemProperties>
							<arguments>
								<argument>${server.IP}</argument>
								<argument>${server.port}</argument>
								<argument>${server.Name}</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		
			<!-- run as 'mvn exec:java -Ppaypal' -->
		<profile>
			<id>paypal</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<configuration>
							<mainClass>es.deusto.paypal.server.PayPalServer</mainClass>
							<systemProperties>
								<systemProperty>
									<key>java.security.manager</key>
									<value>java.rmi.RMISecurityManager</value>
								</systemProperty>
								<systemProperty>
									<key>java.security.policy</key>
									<value>${policy.file}</value>
								</systemProperty>
							</systemProperties>
							<arguments>
								<argument>${server.IP}</argument>
								<argument>${server.port}</argument>
								<argument>${server.paypal}</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		
	</profiles>
	<repositories>
		<repository>
			<id>DN_M2_Repo</id>
			<name>DataNucleus Repository</name>
			<url>http://www.datanucleus.org/downloads/maven2</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>DataNucleus_2</id>
			<url>http://www.datanucleus.org/downloads/maven2/</url>
		</pluginRepository>
	</pluginRepositories>
</project>